{
    "docs": [
        {
            "location": "/", 
            "text": "Reac Alicante 2017 Death Notes\n\n\nAlgunos apuntes del React Alicante 2017", 
            "title": "Home"
        }, 
        {
            "location": "/#reac-alicante-2017-death-notes", 
            "text": "Algunos apuntes del React Alicante 2017", 
            "title": "Reac Alicante 2017 Death Notes"
        }, 
        {
            "location": "/friday/", 
            "text": "Friday 29th Notes\n\n\nThe effect of React on web standards\n\n\n\n\nKarl Horky\n\n\n\n\n\n\nUso del context \nthis\n en est\u00e1ndares es un problema. \n\n\nMucho boilerplate.\n\n\nCustom elements es la propuesta del estandar\n\n\nCr\u00edtica a los problemas de los est\u00e1ndares\n\n\nIncompatibilidades entre browsers\n\n\nInsuficiente componentes\n\n\nImperativa y sin estado (barriendo para casa)\n\n\n\n\n\n\nAproximaciones:\n\n\njQuery, dojo, mootools (2005-6)\n\n\nCoffeScript (2009)\n\n\nAngular, Knockout, Ember (2009-11)\n\n\n\n\n\n\nReact, nuevos paradigmas\n\n\nVirtualDOM\n\n\nJSX\n\n\nProgramaci\u00f3n Funcional\n\n\nInmutabilidad\n\n\nUnidirectional Flow Data\n\n\nModelo de componentes\n\n\nDesacoplado del DOM\n\n\nMinimallismo.\n\n\n\n\n\n\nMinimal surrface API Area\n \nSebastian Markbage\n\n\nWeb Componentes, cr\u00edticas\n\n\nAsumen imperativa\n\n\nNo buena composici\u00f3n\n\n\nAbrazan el DOM\n\n\n\n\n\n\nWeb Standars proposal, process:\n\n\nStage 0 (strawman)\n\n\nStage 1 (proposal)\n\n\nStage 2 (draft)\n\n\nStage 3 (candidate)\n\n\nStage 4 (finished)\n\n\nInclusion in spec\n\n\n\n\n\n\nObjetivos de React en est\u00e1ndares\n\n\nTaming the metalanguage\n\n\nProposici\u00f3n a los est\u00e1ndares:\n\n\nReducci\u00f3n del boilerplate\n\n\n\n\n\n\nDescripci\u00f3n de las diferentes propuestas de React a los est\u00e1ndares y su estado (stage)\n\n\nDave Herman\n, \nDo Expressions (Stage 1)\n\n\nJordan Harband\n\n\nSebastian Markbage \n\n\nImmutable data structure\n\n\nShallow comparation\n\n\n\n\n\n\n\n\n\n\nEsfuerzos de integraci\u00f3n\n\n\n[skateJS]https://github.com/skatejs/skatejs()\n\n\n\n\n\n\nFuturos lenguajes\n\n\nReasonML\n\n\n\n\n\n\nLos est\u00e1ndares se mueven despacio, necesitan consenso. JUAS!!.\n\n\nhttps://prop-tc39.now.sh\n\n\ntc39 proposals\n\n\n\n\nLa idea es que los est\u00e1ndares son como dinosaurios, y React quiere ser estandar, en un momento de la charla comenta que React deber\u00eda desaparecer en pos de un estandar que cubra su funcionalidad, as\u00ed que van proponiendo cosas al tc, pero siguen su marcha.\n\n\nModular CSS\n\n\n\n\nAndrey trolololo\n\n\n\n\nCSS ha pasado de aplicarse en documentos para ser usado en apps. Pasaron 20 a\u00f1os desde el primer estandar.  Separaci\u00f3n de contextos: CSS, HTML, JS.\n\n\nMomento actual, HTML in JS aka JSX.  No hagas eso!!!, y todo el mundo lo hace. \n\n\n\n\nf(state) =\n UI\n\n\n\n\nBEM\n, manual work.\n\n\n\n\nBEM + JS = CSS Modules\n\n\n\n\nCSS Modules necesitan el \nbuild\n. \n\n\n\n\nCSS Modules + JS = \nJSS\n\n\n\n\nCSS in JS no necesita \nbuild\n\n\nwww.styled-components.com\n\n\nEn un futuro rendering para muchos tipos de device\n\nglamor css library\n\nLa mantenibilidad es posiblemente una de las mejores caracter\u00edsticas para perfomance. Mucha repetici\u00f1on en CSS, muy verbose.\n\n\nCSS Funcional?\n\n\nstyletron\n\n\nPara que usar SASS si JS ya tiene parte de la funcionalidad\n\n\n\n\nnpm install glam\n\n\n\n\nMe falta contexto en CSS para poder aportar mi opini\u00f3n, pero la idea es que CSS es muy verbose, crea grandes archivos que son dificiles de mantener y leer (ha mostrado m\u00e9tricas de como airbnb disminuye el tama\u00f1o de CSS usando algunas de las tecnolog\u00edas de las que comenta en la charla) y que adem\u00e1s es global. Critica el uso de SASS, LESS, etc, ya que muchas de las funcionalidades que proponen ya est\u00e1n incluidas en JS, as\u00ed que muestra JSS como soluci\u00f3n. Respecto a BEM comenta que es muy verbose y sigue con los problemas de origen de CSS, pero dio un poco de orden en su momento.\n\n\nReact \n Redux, a development workflow\n\n\n\n\nBraulio the clown\n\n\n\n\nTal vez no necesites usar Redux desde el minuto cero de tu aplicaci\u00f3n. \n\n\n DEMO TIME \n\n\nSe han hecho un tutorial de React + Redux en directo. No se ve un carallo, y m\u00e1s sin gafas. \n\n\nReact Storybook\n\n\n\n\nMarie-Laure Thuret\n\n\n\n\nStoryBook\n\n\n DEMO TIME \n\n\nEs una herramienta para definir los diferentes estados de un componente. Cada Story es un estado del componente.\n\n\nStoryShots, testing snapshots.\n\n\nVisual regresion testing, \nargo\n\n\nUna buena herramienta para comunicar con otros. Se adjuntan al PR o a la Issue.\n\n\nA practical guide to Redux Form\n\n\n\n\nErik Rasmussen\n\n\n\n\nFormularios, el peor problema en desarrollo frontend:\n\n\n\n\nValidaci\u00f3n\n\n\nTasa de cambio de estado alta\n\n\nComunicaci\u00f3n con el usuario\n\n\n\n\nCambia el estado desde los hijos del formulario al padre, que maneja el estado y se lo pasa a los hijos. Los cambios en los hijos se pasan mediante callbacks, manteniendo el paradigma de React.\n\n\nRedux Form\n\n\n\n\na single reducer\n\n\na HOC form\n\n\n\n\n LIVE CODING \n\n\nImporta el \nredux-form\n, crea un componente que renderice un \nform\n con los campos del formulario y se lo pasa a una HOC que le da el \nredux-form\n. Ya tiene conectado el formulario a redux.\n\n\nCrea un componente \nrenderComponent\n y la librer\u00eda le inyecta estados en una propiedad \nmeta\n. Puede acceder a errores de validaci\u00f3n a trav\u00e9s del \nmeta\n que se muestran en el formulario.\n\n\nLightning Talks\n\n\nCustom CSS is the path to inconsistent UI\n\n\n\n\nArtem Sapegin \n\n\n\n\nQue significa inconsistencia?. La introducci\u00f3n de variables disminute la inconsistencia.\n\n\nCual es la soluci\u00f3n. El uso de components en vez de custom CSS\n\n\nNathan curtis framework\n\n\nMe pasa lo que en la charla anterior de CSS, que me falta contexto, pero lo que viene a decir es que uses components y no uses Custom CSS, lo contrario del de la primera charla de CSS, WTF!!.\n\n\nBeyond JavaScript: The Real Benefit of React Native\n\n\n\n\nWojciech Ogrodowczyk\n\n\n\n\nPiraha people\n\n\nLa gente que construye los botes somos los programadores.\n\n\n\"Premature optimisation is the root of all evil\". Donald Knuth\n\n\nDescenso de bgs usando typescript o flow\n\n\nReact Native - Case study: From zero to a super hero app\n\n\n\n\nFerran Negre\n\n\n\n\nExplica la creaci\u00f3n de un side projectsobre twshows. \nMaterial theme\n\n\n\n\nArchitecture, Redux, \nredux-observable\n, realm, \nasyncstorage\n\n\nStyling and theme, material design.\n\n\nreact-native-paper\n\n\nsoporta modo dia \n noche\n\n\n\n\n\n\nInternacionalizaci\u00f3n:\n\n\nreact-native-i18n\n\n\n\n\n\n\nOrientation: no bloquear orientaci\u00f3n\n\n\nNavigation: \nDeep linking\n\nCuando pones la React-native app en background, el OS se carga la app. Puede que lo haga en menos de un minuto. \nAppState\n es un listener que controla si la Aop est\u00e1 en background o vuelve a foreground. Esta librer\u00eda guarda el estado de la app. AppState MOLA!!!.\n\n\nBackground tasks: controlar los cambios de datos externos por ejemplo. \n\n\nHeadlessJS\n. Ejecuta tareas de JS mientras la App est\u00e1 en background\n\n\nAndroid SyncAdapter\n =\n \nreact-native-sync-adapter\n\n\n\n\n\n\nAnimated API de React Native:\n\n\nuseNativeDriver: true\n\n\nLas animaciones suceden en la parte nativa\n\n\nDeligthful interactions\n\n\n\n\n\n\nPermissions\n\n\nRemove permissions\n\n\n\n\n\n\nApp Store\n\n\nCodePush\n\n\n\n\n\n\n\n\nMutable or Immutable?. Let's do both\n\n\n\n\nMattia Manzati\n\n\n\n\nGesti\u00f3n del estado por:\n\n\n\n\nRedux\n\n\nMobx\n\n\n\n\nCual elijo?, depende...\n\n\nSon patrones opuestos:\n\n\n\n\nredux =\n immutable\n\n\nmobx =\n mutable\n\n\n\n\nRehydratation\n mas facil con redux, con mobx tenemos que serializar y deserializar nuestro estado ya que los compoenntes pueden tener estado interno.\n\n\nSnapshots\n son mejor con Redux.\n\n\nmobx-state-tree\n lo mejor de los dos mundos:\n\n\n\n\ndefinimos un datashape que ser\u00e1 claro y las accinones est\u00e1n definidas\n\n\nPodemos obtener snapshots de nuestros datos, Podremos crear una instancia de snapchost tambi\u00e9n. As\u00ed como escuchar cambios en el snapshot.\n\n\nComponiendo modelos\n\n\nTypes\n\n\nTypechecking\n\n\nReconciliaci\u00f3n.\n\n\nAcciones, con redux podemos reporducir el flujo de acciones. No con Mobx. \nmobx-state-tree\n incluye esto para mobx\n\n\nObservabilidad:\n\n\nfine grained en mobx\n\n\nsi cambian las referncias, cambian los valores\n\n\ncon \nmobs-state-tree\n se tienen las dos, pero si los valores cambian, se obtiene una nueva snapshot\n\n\n\n\n\n\n\n\nPodremos crear una Redux store desde una instancia de MST  out-the-box", 
            "title": "Friday 29th"
        }, 
        {
            "location": "/friday/#friday-29th-notes", 
            "text": "", 
            "title": "Friday 29th Notes"
        }, 
        {
            "location": "/friday/#the-effect-of-react-on-web-standards", 
            "text": "Karl Horky    Uso del context  this  en est\u00e1ndares es un problema.   Mucho boilerplate.  Custom elements es la propuesta del estandar  Cr\u00edtica a los problemas de los est\u00e1ndares  Incompatibilidades entre browsers  Insuficiente componentes  Imperativa y sin estado (barriendo para casa)    Aproximaciones:  jQuery, dojo, mootools (2005-6)  CoffeScript (2009)  Angular, Knockout, Ember (2009-11)    React, nuevos paradigmas  VirtualDOM  JSX  Programaci\u00f3n Funcional  Inmutabilidad  Unidirectional Flow Data  Modelo de componentes  Desacoplado del DOM  Minimallismo.    Minimal surrface API Area   Sebastian Markbage  Web Componentes, cr\u00edticas  Asumen imperativa  No buena composici\u00f3n  Abrazan el DOM    Web Standars proposal, process:  Stage 0 (strawman)  Stage 1 (proposal)  Stage 2 (draft)  Stage 3 (candidate)  Stage 4 (finished)  Inclusion in spec    Objetivos de React en est\u00e1ndares  Taming the metalanguage  Proposici\u00f3n a los est\u00e1ndares:  Reducci\u00f3n del boilerplate    Descripci\u00f3n de las diferentes propuestas de React a los est\u00e1ndares y su estado (stage)  Dave Herman ,  Do Expressions (Stage 1)  Jordan Harband  Sebastian Markbage   Immutable data structure  Shallow comparation      Esfuerzos de integraci\u00f3n  [skateJS]https://github.com/skatejs/skatejs()    Futuros lenguajes  ReasonML    Los est\u00e1ndares se mueven despacio, necesitan consenso. JUAS!!.  https://prop-tc39.now.sh  tc39 proposals   La idea es que los est\u00e1ndares son como dinosaurios, y React quiere ser estandar, en un momento de la charla comenta que React deber\u00eda desaparecer en pos de un estandar que cubra su funcionalidad, as\u00ed que van proponiendo cosas al tc, pero siguen su marcha.", 
            "title": "The effect of React on web standards"
        }, 
        {
            "location": "/friday/#modular-css", 
            "text": "Andrey trolololo   CSS ha pasado de aplicarse en documentos para ser usado en apps. Pasaron 20 a\u00f1os desde el primer estandar.  Separaci\u00f3n de contextos: CSS, HTML, JS.  Momento actual, HTML in JS aka JSX.  No hagas eso!!!, y todo el mundo lo hace.    f(state) =  UI   BEM , manual work.   BEM + JS = CSS Modules   CSS Modules necesitan el  build .    CSS Modules + JS =  JSS   CSS in JS no necesita  build  www.styled-components.com  En un futuro rendering para muchos tipos de device glamor css library \nLa mantenibilidad es posiblemente una de las mejores caracter\u00edsticas para perfomance. Mucha repetici\u00f1on en CSS, muy verbose.  CSS Funcional?  styletron  Para que usar SASS si JS ya tiene parte de la funcionalidad   npm install glam   Me falta contexto en CSS para poder aportar mi opini\u00f3n, pero la idea es que CSS es muy verbose, crea grandes archivos que son dificiles de mantener y leer (ha mostrado m\u00e9tricas de como airbnb disminuye el tama\u00f1o de CSS usando algunas de las tecnolog\u00edas de las que comenta en la charla) y que adem\u00e1s es global. Critica el uso de SASS, LESS, etc, ya que muchas de las funcionalidades que proponen ya est\u00e1n incluidas en JS, as\u00ed que muestra JSS como soluci\u00f3n. Respecto a BEM comenta que es muy verbose y sigue con los problemas de origen de CSS, pero dio un poco de orden en su momento.", 
            "title": "Modular CSS"
        }, 
        {
            "location": "/friday/#react-redux-a-development-workflow", 
            "text": "Braulio the clown   Tal vez no necesites usar Redux desde el minuto cero de tu aplicaci\u00f3n.    DEMO TIME   Se han hecho un tutorial de React + Redux en directo. No se ve un carallo, y m\u00e1s sin gafas.", 
            "title": "React &gt;&gt; Redux, a development workflow"
        }, 
        {
            "location": "/friday/#react-storybook", 
            "text": "Marie-Laure Thuret   StoryBook   DEMO TIME   Es una herramienta para definir los diferentes estados de un componente. Cada Story es un estado del componente.  StoryShots, testing snapshots.  Visual regresion testing,  argo  Una buena herramienta para comunicar con otros. Se adjuntan al PR o a la Issue.", 
            "title": "React Storybook"
        }, 
        {
            "location": "/friday/#a-practical-guide-to-redux-form", 
            "text": "Erik Rasmussen   Formularios, el peor problema en desarrollo frontend:   Validaci\u00f3n  Tasa de cambio de estado alta  Comunicaci\u00f3n con el usuario   Cambia el estado desde los hijos del formulario al padre, que maneja el estado y se lo pasa a los hijos. Los cambios en los hijos se pasan mediante callbacks, manteniendo el paradigma de React.  Redux Form   a single reducer  a HOC form    LIVE CODING   Importa el  redux-form , crea un componente que renderice un  form  con los campos del formulario y se lo pasa a una HOC que le da el  redux-form . Ya tiene conectado el formulario a redux.  Crea un componente  renderComponent  y la librer\u00eda le inyecta estados en una propiedad  meta . Puede acceder a errores de validaci\u00f3n a trav\u00e9s del  meta  que se muestran en el formulario.", 
            "title": "A practical guide to Redux Form"
        }, 
        {
            "location": "/friday/#lightning-talks", 
            "text": "", 
            "title": "Lightning Talks"
        }, 
        {
            "location": "/friday/#custom-css-is-the-path-to-inconsistent-ui", 
            "text": "Artem Sapegin    Que significa inconsistencia?. La introducci\u00f3n de variables disminute la inconsistencia.  Cual es la soluci\u00f3n. El uso de components en vez de custom CSS  Nathan curtis framework  Me pasa lo que en la charla anterior de CSS, que me falta contexto, pero lo que viene a decir es que uses components y no uses Custom CSS, lo contrario del de la primera charla de CSS, WTF!!.", 
            "title": "Custom CSS is the path to inconsistent UI"
        }, 
        {
            "location": "/friday/#beyond-javascript-the-real-benefit-of-react-native", 
            "text": "Wojciech Ogrodowczyk   Piraha people  La gente que construye los botes somos los programadores.  \"Premature optimisation is the root of all evil\". Donald Knuth  Descenso de bgs usando typescript o flow", 
            "title": "Beyond JavaScript: The Real Benefit of React Native"
        }, 
        {
            "location": "/friday/#react-native-case-study-from-zero-to-a-super-hero-app", 
            "text": "Ferran Negre   Explica la creaci\u00f3n de un side projectsobre twshows. \nMaterial theme   Architecture, Redux,  redux-observable , realm,  asyncstorage  Styling and theme, material design.  react-native-paper  soporta modo dia   noche    Internacionalizaci\u00f3n:  react-native-i18n    Orientation: no bloquear orientaci\u00f3n  Navigation:  Deep linking \nCuando pones la React-native app en background, el OS se carga la app. Puede que lo haga en menos de un minuto.  AppState  es un listener que controla si la Aop est\u00e1 en background o vuelve a foreground. Esta librer\u00eda guarda el estado de la app. AppState MOLA!!!.  Background tasks: controlar los cambios de datos externos por ejemplo.   HeadlessJS . Ejecuta tareas de JS mientras la App est\u00e1 en background  Android SyncAdapter  =   react-native-sync-adapter    Animated API de React Native:  useNativeDriver: true  Las animaciones suceden en la parte nativa  Deligthful interactions    Permissions  Remove permissions    App Store  CodePush", 
            "title": "React Native - Case study: From zero to a super hero app"
        }, 
        {
            "location": "/friday/#mutable-or-immutable-lets-do-both", 
            "text": "Mattia Manzati   Gesti\u00f3n del estado por:   Redux  Mobx   Cual elijo?, depende...  Son patrones opuestos:   redux =  immutable  mobx =  mutable   Rehydratation  mas facil con redux, con mobx tenemos que serializar y deserializar nuestro estado ya que los compoenntes pueden tener estado interno.  Snapshots  son mejor con Redux.  mobx-state-tree  lo mejor de los dos mundos:   definimos un datashape que ser\u00e1 claro y las accinones est\u00e1n definidas  Podemos obtener snapshots de nuestros datos, Podremos crear una instancia de snapchost tambi\u00e9n. As\u00ed como escuchar cambios en el snapshot.  Componiendo modelos  Types  Typechecking  Reconciliaci\u00f3n.  Acciones, con redux podemos reporducir el flujo de acciones. No con Mobx.  mobx-state-tree  incluye esto para mobx  Observabilidad:  fine grained en mobx  si cambian las referncias, cambian los valores  con  mobs-state-tree  se tienen las dos, pero si los valores cambian, se obtiene una nueva snapshot     Podremos crear una Redux store desde una instancia de MST  out-the-box", 
            "title": "Mutable or Immutable?. Let's do both"
        }, 
        {
            "location": "/saturday/", 
            "text": "Saturday 30th Notes\n\n\nEnd to End testing React applications\n\n\n\n\nForbes Lindesay\n\n\n\n\nLo normal es esto:\n\n\n    Unit Tests \n Integrationg tests \n e2e\n\n\n\nPreferible esto \n\n\n    Static analisis \n JS Tests \n e2e tests\n\n\n\nWhy static analisys?\n\n\n\n\nCover 100%\n\n\nCaptura asunciones incorrectas\n\n\nEslint, TSLint\n\n\nFlow\n, TS\n\n\nprettier\n is an opinionated code formatter\n\n\n\n\nPorqu\u00e9 TS Tests?\n\n\n\n\nNo testea lo que hace el usuario\n\n\nSe necesitan muchos tests para mejorar la cobertura\n\n\nJEST\n, Delightful JavaScript Testing\n\n\n\n\nPorqu\u00e9 e2e tests?\n\n\n\n\nTestean lo que de verdad quieres hacer\n\n\nExpone inconsistencia del browser\n\n\nPocos text tienen una gran cobertura\n\n\n\u00danica manera de saber que el sistema est\u00e1 funcionando\n\n\nLentos, caros y df\u00edciles de seguir, \u00bfqu\u00e9 falla?\n\n\n\n\nLos dos primeros puntos cubren un 80% de los bugs\n\n\n\n\n\n\nUn WebDriver expone una API consistente para automatizar browsers\n\n\n\n\n\n\nSAUCELabs\n\n\n\n\nBrowserStack\n\n\nTestingBot\n\n\n\n\nCrossBrowserTesting\n\n\n\n\n\n\nJSDOM\n a full implementaci\u00f3n del DOM en JS + \nTAXI-RANK\n tienes el mismo interface que en el browser pero lo puedes ejecutar en node.js\n\n\n\n\n\n\nCabbie\n Esto es un t\u00edpico yo he venido aqu\u00ed a hablar de mi libro...\n\n\n\n\n\n\nParece que pivota sobre el \ndataTestId\n, es el id de test\n\n\n    this.props('data-test-id')\n\n\n\n DEMO TIME \n\n\n\n\nNunca meter un timeout en el Test\n JUAS!!\n\n\nPolling el website hasta que adquiera las condiciones necesarias para lanzar el test\n\n\n\n\n LIVE DEMO TIME \n\n\nCarga el driver con \ncabbie\n que es el que emula el DOM. Despu\u00e9s con \ndriver.getElement['whatever']\n captura lo que quiere testear\n\n\nHa venido a comentar \nSU\n stack de herramientas para realizar e2e testing. Me quedo con lo que ha comentado al principio de manejar an\u00e1lisis est\u00e1ticos con testing de JS y e2e test para dar una mejor cobertura al desarrollo, sin tener que volverse loco con los test unitarios\n\n\nRefs\n\n\nEnd to End (e2e) Testing React Apps With Selenium WebDriver And Node.js is Easier Than You Think\n\n\nWriting highly reusable React components\n\n\n\n\nJavi Velasco\n\n\n\n\nreact-toolbox\n\n\nEs el creador de la librer\u00eda. Comenta los problemas del CSS en el JS a la hora de estilizar los componentes de su librer\u00eda. \n\n\nVuelve a aparecer \nwww.styled-components.com", 
            "title": "Saturday 30th"
        }, 
        {
            "location": "/saturday/#saturday-30th-notes", 
            "text": "", 
            "title": "Saturday 30th Notes"
        }, 
        {
            "location": "/saturday/#end-to-end-testing-react-applications", 
            "text": "Forbes Lindesay   Lo normal es esto:      Unit Tests   Integrationg tests   e2e  Preferible esto       Static analisis   JS Tests   e2e tests  Why static analisys?   Cover 100%  Captura asunciones incorrectas  Eslint, TSLint  Flow , TS  prettier  is an opinionated code formatter   Porqu\u00e9 TS Tests?   No testea lo que hace el usuario  Se necesitan muchos tests para mejorar la cobertura  JEST , Delightful JavaScript Testing   Porqu\u00e9 e2e tests?   Testean lo que de verdad quieres hacer  Expone inconsistencia del browser  Pocos text tienen una gran cobertura  \u00danica manera de saber que el sistema est\u00e1 funcionando  Lentos, caros y df\u00edciles de seguir, \u00bfqu\u00e9 falla?   Los dos primeros puntos cubren un 80% de los bugs    Un WebDriver expone una API consistente para automatizar browsers    SAUCELabs   BrowserStack  TestingBot   CrossBrowserTesting    JSDOM  a full implementaci\u00f3n del DOM en JS +  TAXI-RANK  tienes el mismo interface que en el browser pero lo puedes ejecutar en node.js    Cabbie  Esto es un t\u00edpico yo he venido aqu\u00ed a hablar de mi libro...    Parece que pivota sobre el  dataTestId , es el id de test      this.props('data-test-id')   DEMO TIME    Nunca meter un timeout en el Test  JUAS!!  Polling el website hasta que adquiera las condiciones necesarias para lanzar el test    LIVE DEMO TIME   Carga el driver con  cabbie  que es el que emula el DOM. Despu\u00e9s con  driver.getElement['whatever']  captura lo que quiere testear  Ha venido a comentar  SU  stack de herramientas para realizar e2e testing. Me quedo con lo que ha comentado al principio de manejar an\u00e1lisis est\u00e1ticos con testing de JS y e2e test para dar una mejor cobertura al desarrollo, sin tener que volverse loco con los test unitarios", 
            "title": "End to End testing React applications"
        }, 
        {
            "location": "/saturday/#refs", 
            "text": "End to End (e2e) Testing React Apps With Selenium WebDriver And Node.js is Easier Than You Think", 
            "title": "Refs"
        }, 
        {
            "location": "/saturday/#writing-highly-reusable-react-components", 
            "text": "Javi Velasco   react-toolbox  Es el creador de la librer\u00eda. Comenta los problemas del CSS en el JS a la hora de estilizar los componentes de su librer\u00eda.   Vuelve a aparecer  www.styled-components.com", 
            "title": "Writing highly reusable React components"
        }
    ]
}